events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # File upload size
    client_max_body_size 10M;
    
    # Upstream configuration
    upstream sharedo_converter {
        server sharedo-converter:8000;
    }
    
    # HTTP server - redirect to HTTPS in production
    server {
        listen 80;
        server_name localhost;
        
        # Health check endpoint (always HTTP)
        location /health {
            proxy_pass http://sharedo_converter/health;
            proxy_set_header Host $host;
            access_log off;
        }
        
        # Main application
        location / {
            proxy_pass http://sharedo_converter;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for real-time updates
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Static files caching
        location /static/ {
            proxy_pass http://sharedo_converter/static/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
        
        # API endpoints
        location /api/ {
            proxy_pass http://sharedo_converter/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # Swagger documentation
        location /docs {
            proxy_pass http://sharedo_converter/docs;
            proxy_set_header Host $host;
        }
        
        location /redoc {
            proxy_pass http://sharedo_converter/redoc;
            proxy_set_header Host $host;
        }
        
        location /openapi.json {
            proxy_pass http://sharedo_converter/openapi.json;
            proxy_set_header Host $host;
        }
    }
    
    # HTTPS server configuration (uncomment for production)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     # SSL configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers on;
    #     
    #     # Include all location blocks from HTTP server above
    # }
}